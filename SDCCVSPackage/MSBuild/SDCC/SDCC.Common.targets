<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="VCMessage" AssemblyFile="$(VCTargetsPath)Microsoft.Build.CppTasks.Common.dll" />
  <UsingTask TaskName="CustomBuild" AssemblyFile="$(VCTargetsPath)Microsoft.Build.CppTasks.Common.dll"/>

  <UsingTask TaskName="SDCCCompile" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCAssemble" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCLink" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCLib" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCMakeBin" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCVersion" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCResolveLibraries" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCRelEolUpdater" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>
  <UsingTask TaskName="SDCCLibCdbGenerator" AssemblyFile="$(MsBuildThisFileDirectory)SDCCTask.dll"/>

  <PropertyGroup>
    <DetermineProjectTypeTargets>ResolvePreprocessorDefs</DetermineProjectTypeTargets>
  </PropertyGroup>

  <PropertyGroup Label="Configuration">
    <_ApplicableDebuggers>Desktop</_ApplicableDebuggers>
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />

  <Target Name="PreBuildEvent" Condition="'$(PreBuildEventUseInBuild)'!='false'">
    <Message Text="%(PreBuildEvent.Message)" Condition="'%(PreBuildEvent.Message)' != '' and '%(PreBuildEvent.Command)' != ''"  Importance="High" />
    <Exec Command="%(PreBuildEvent.Command)$(_BuildSuffix)" Condition="'%(PreBuildEvent.Command)' != ''"/>
  </Target>

  <Target Name="PreLinkEvent" Condition="'$(PreLinkEventUseInBuild)'!='false'">
    <Message Text="%(PreLinkEvent.Message)" Condition="'%(PreLinkEvent.Message)' != '' and '%(PreLinkEvent.Command)' != ''" Importance="High" />
    <Exec Command="%(PreLinkEvent.Command)$(_BuildSuffix)" Condition="'%(PreLinkEvent.Command)' != ''"/>
  </Target>

  <Target Name="PostBuildEvent" Condition="'$(PostBuildEventUseInBuild)'!='false'">
    <Message Text="%(PostBuildEvent.Message)" Condition="'%(PostBuildEvent.Message)' != '' and '%(PostBuildEvent.Command)' != ''" Importance="High" />
    <Exec Command="%(PostBuildEvent.Command)$(_BuildSuffix)" Condition="'%(PostBuildEvent.Command)' != ''"/>
  </Target>


  <ItemGroup Condition="'$(UseSDCCPropertyPageSchemas)' != 'false' and '$(UseDefaultDebuggersPropertyPageSchemas)' != 'false'">
    <DesktopDebuggerPages Include="$(VCTargetsPath)$(LangID)\debugger_*.xml" Exclude="$(VCTargetsPath)$(LangID)\debugger_smartdevice_native.xml" />
    <!-- Make sure the following debugger schemas are explicitly included, to allow CPS to search for them
         in the alternative locations. To avoid duplicate schemas, we don't include them
         if they already exist in $(VCTargetsPath)$(LangID)\debugger_*.xml -->
    <DesktopDebuggerPages Condition="Exists('$(MSBuildThisFileDirectory)\Debuggers\Emulicious\EmuliciousDebugger.xaml')" Include="$(MSBuildThisFileDirectory)\Debuggers\Emulicious\EmuliciousDebugger.xaml" />

    <!-- Include the local debugger to allow developers to use start/start debugging to launch their desired debugger.-->
    <DesktopDebuggerPages Condition="!Exists('$(VCTargetsPath)$(LangID)\debugger_local_windows.xml')" Include="$(VCTargetsPath)$(LangID)\debugger_local_windows.xml" />
  </ItemGroup>

  <!-- Language ID Selection-->
  <PropertyGroup>
    <GBDKLangID Condition="exists('$(MSBuildThisFileDirectory)$(LangID)')">$(LangID)</GBDKLangID>
    <GBDKLangID Condition="'$(GBDKLangID)' == ''">1033</GBDKLangID>
  </PropertyGroup>


  <ItemGroup Condition="'$(UseSDCCPropertyPageSchemas)' != 'false'">
    <PropertyPageSchema Include="
        $(MSBuildThisFileDirectory)$(GBDKLangID)/ProjectItemsSchema.xml;
        $(VCTargetsPath)$(LangID)\build_events.xml;
        $(VCTargetsPath)$(LangID)\custom_build_tool.xml;
        $(VCTargetsPath)$(LangID)\custom_build_step.xml;
        "/>

    <!-- Import the tool specific property sheet data. -->
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/SDCC.General.xml">
      <Context>Project</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/SDCC.Common.xml"/>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/SDAS.Common.xml"/>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/SDLD.Common.xml">
      <Context>Project</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/MakeBin.Common.xml">
      <Context>Project</Context>
    </PropertyPageSchema>

    <!-- Import the Port specific Property sheet data. -->
    <PropertyPageSchema Condition="'$(PortType)' == 'gbz80'" Include="$(MSBuildThisFileDirectory)$(GBDKLangID)/SDCC.gbz80.xml">
      <Context>PropertySheet;Project;File</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Condition="'$(PortType)' == 'gbz80'" Include="$(MSBuildThisFileDirectory)GBDK/SDCC.GBDK.xml">
      <Context>Project</Context>
    </PropertyPageSchema>

    <!-- Debuggers -->
    <DebuggerPages Include="@(DesktopDebuggerPages)" />

    <!-- We always need debuggers general page as soon as we have at least one debugger -->
    <PropertyPageSchema Condition="'@(DebuggerPages)' != ''" Include="$(VCTargetsPath)$(LangID)\debugger_general.xml" />
    <PropertyPageSchema Include="@(DebuggerPages)" />

  </ItemGroup>

  <PropertyGroup>
    <PreprocessorDefinitions>$(PreprocessorDefinitions);$(SDCCIntellisenseDefinitions);$(SDCCPreprocessorDefinitions)</PreprocessorDefinitions>
    <AdditionalIncludeDirectories>$(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    <IncludePath>$(AdditionalIncludeDirectories)</IncludePath>
    <LibraryPath>$(AdditionalLibraryPath)</LibraryPath>
  </PropertyGroup>

  <!--  -->

  <Target Name="ValidateSDCCPath">
    <Error Condition="Exists($(SDCCPath)) != true" Text="Unable to verify the path to SDCC please set the 'SDCCPath' variable."/>
  </Target>

  <Target Name="ResolvePreprocessorDefs">
    <SDCCVersion
      Condition="'$(SDCCCompilerDefinitions)' == ''"
      SDCCExecutable="$(SDCCBinPath)sdcc.exe">
      <Output TaskParameter="Version" PropertyName="SDCCVersion"/>
      <Output TaskParameter="MajorVersion" PropertyName="SDCCMajorVersion"/>
      <Output TaskParameter="MinorVersion" PropertyName="SDCCMinorVersion"/>
      <Output TaskParameter="PatchVersion" PropertyName="SDCCPatchVersion"/>
      <Output TaskParameter="Revision" PropertyName="SDCCRevision"/>
    </SDCCVersion>
    <PropertyGroup Condition="'$(SDCCCompilerDefinitions)' == ''">
      <SDCCCompilerDefinitions>__SDCC=$(SDCCVersion.Replace(".", "_"));__SDCC_$(PortType)=;__SDCC_VERSION_MAJOR=$(SDCCMajorVersion);__SDCC_VERSION_MINOR=$(SDCCMinorVersion);__SDCC_VERSION_PATCH=$(SDCCPatchVersion);__SDCC_REVISION=$(SDCCRevision);</SDCCCompilerDefinitions>
      <SDCCCompilerDefinitions Condition="'$(PortType)'=='ds390'">$(SDCCCompilerDefinitions);__SDCC_STACK_TENBIT=;</SDCCCompilerDefinitions>
      <SDCCCompilerDefinitions Condition="'$(PortType)'=='ds390'">$(SDCCCompilerDefinitions);__SDCC_MODEL_FLAT24=;</SDCCCompilerDefinitions>

    </PropertyGroup>
    <ItemGroup>
      <ClCompile>
        <PreprocessorDefinitions>
          $(SDCCCompilerDefinitions);
          %(ClCompile.SDCCCompilerDefinitions);
          %(ClCompile.PreprocessorDefinitions);
          %(ClCompile.SDCCPreprocessorDefinitions);
        </PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.StackAuto)'=='true'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_STACK_AUTO=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.MemoryModel)'=='Small'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_MODEL_SMALL=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.MemoryModel)'=='Medium'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_MODEL_MEDIUM=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.MemoryModel)'=='Large'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_MODEL_LARGE=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.MemoryModel)'=='Huge'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_MODEL_HUGE=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.ParamsInBank1)'=='true'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);SDCC_PARMS_IN_BANK1=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.AllCalleeSaves)'=='true'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_ALL_CALLEE_SAVES=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.FloatReent)'=='true'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_FLOAT_REENT=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.IntLongReent)'=='true'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_INT_LONG_REENT=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.OptimizeCode)'=='CodeSpeed'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_OPTIMIZE_SPEED=</PreprocessorDefinitions>
      </ClCompile>
      <ClCompile Condition="'%(ClCompile.OptimizeCode)'=='CodeSize'">
        <PreprocessorDefinitions>%(ClCompile.PreprocessorDefinitions);__SDCC_OPTIMIZE_SIZE=</PreprocessorDefinitions>
      </ClCompile>
    </ItemGroup>
  </Target>

  <!-- 
  ********************************************************************************
  * SDCC Specific ClCompile
  ********************************************************************************
  -->
  <Target Name="ClCompile" Inputs="@(ClCompile);@(ClInclude)"
          Outputs="@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)')">
    <Message Importance="High" Text="Compiling C Source Files:"/>

    <ItemGroup>
      <ClCompile>
        <OutputFile>$(IntDir)%(ClCompile.Filename)$(ObjectExtension)</OutputFile>

        <PortType                      Condition="'%(ClCompile.PortType)' == ''">$(PortType)</PortType>
        <ProcessorType                 Condition="'%(ClCompile.ProcessorType)' == ''">$(ProcessorType)</ProcessorType>

        <Verbose                       Condition="'%(ClCompile.Verbose)' == ''">$(Verbose)</Verbose>
        <OutputMacros                  Condition="'%(ClCompile.OutputMacros)' == ''">$(OutputMacros)</OutputMacros>
        <PreprocessorDefinitions       Condition="'%(ClCompile.PreprocessorDefinitions)' == ''">$(PreprocessorDefinitions)</PreprocessorDefinitions>
        <SDCCPreprocessorDefinitions   Condition="'%(ClCompile.SDCCPreprocessorDefinitions)' == ''">$(SDCCPreprocessorDefinitions)</SDCCPreprocessorDefinitions>
        <AdditionalIncludeDirectories  Condition="'%(ClCompile.AdditionalIncludeDirectories)' == ''">$(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
        <AssertAnswer                  Condition="'%(ClCompile.AssertAnswer)' == ''">$(AssertAnswer)</AssertAnswer>
        <PreprocessorUndefines         Condition="'%(ClCompile.PreprocessorUndefines)' == ''">$(PreprocessorUndefines)</PreprocessorUndefines>
        <DependencyRule                Condition="'%(ClCompile.DependencyRule)' == ''">$(DependencyRule)</DependencyRule>
        <PreprocessorOptions           Condition="'%(ClCompile.PreprocessorOptions)' == ''">$(PreprocessorOptions)</PreprocessorOptions>
        <AssemblerOptions              Condition="'%(ClCompile.AssemblerOptions)' == ''">$(AssemblerOptions)</AssemblerOptions>
        <LinkerOptions                 Condition="'%(ClCompile.LinkerOptions)' == ''">$(LinkerOptions)</LinkerOptions>
        <PrintSearchDirs               Condition="'%(ClCompile.PrintSearchDirs)' == ''">$(PrintSearchDirs)</PrintSearchDirs>
        <NoStdLib                      Condition="'%(ClCompile.NoStdLib)' == ''">$(NoStdLib)</NoStdLib>
        <NoStdInc                      Condition="'%(ClCompile.NoStdInc)' == ''">$(NoStdInc)</NoStdInc>
        <LessPedantic                  Condition="'%(ClCompile.LessPedantic)' == ''">$(LessPedantic)</LessPedantic>
        <DisableWarning                Condition="'%(ClCompile.DisableWarning)' == ''">$(DisableWarning)</DisableWarning>
        <WarnErrors                    Condition="'%(ClCompile.WarnErrors)' == ''">$(WarnErrors)</WarnErrors>
        <Debug                         Condition="'%(ClCompile.Debug)' == ''">$(Debug)</Debug>
        <Cyclomatic                    Condition="'%(ClCompile.Cyclomatic)' == ''">$(Cyclomatic)</Cyclomatic>
        <CStandard                     Condition="'%(ClCompile.CStandard)' == ''">$(CStandard)</CStandard>
        <DollarsInId                   Condition="'%(ClCompile.DollarsInId)' == ''">$(DollarsInId)</DollarsInId>
        <SignedChar                    Condition="'%(ClCompile.SignedChar)' == ''">$(SignedChar)</SignedChar>
        <UseNonFree                    Condition="'%(ClCompile.UseNonFree)' == ''">$(UseNonFree)</UseNonFree>

        <StackAuto                     Condition="'%(ClCompile.StackAuto)' == ''">$(StackAuto)</StackAuto>
        <ExternalStack                 Condition="'%(ClCompile.ExternalStack)' == ''">$(ExternalStack)</ExternalStack>
        <IntLongReent                  Condition="'%(ClCompile.IntLongReent)' == ''">$(IntLongReent)</IntLongReent>
        <FloatReent                    Condition="'%(ClCompile.FloatReent)' == ''">$(FloatReent)</FloatReent>
        <XRamMovec                     Condition="'%(ClCompile.XRamMovec)' == ''">$(XRamMovec)</XRamMovec>
        <CalleeSaves                   Condition="'%(ClCompile.CalleeSaves)' == ''">$(CalleeSaves)</CalleeSaves>
        <Profile                       Condition="'%(ClCompile.Profile)' == ''">$(Profile)</Profile>
        <OmitFramePointer              Condition="'%(ClCompile.OmitFramePointer)' == ''">$(OmitFramePointer)</OmitFramePointer>
        <AllCalleeSaves                Condition="'%(ClCompile.AllCalleeSaves)' == ''">$(AllCalleeSaves)</AllCalleeSaves>
        <StackProbe                    Condition="'%(ClCompile.StackProbe)' == ''">$(StackProbe)</StackProbe>
        <NoXinitOpt                    Condition="'%(ClCompile.NoXinitOpt)' == ''">$(NoXinitOpt)</NoXinitOpt>
        <NoCCodeInAsm                  Condition="'%(ClCompile.NoCCodeInAsm)' == ''">$(NoCCodeInAsm)</NoCCodeInAsm>
        <NoPeepComments                Condition="'%(ClCompile.NoPeepComments)' == ''">$(NoPeepComments)</NoPeepComments>
        <CodeSeg                       Condition="'%(ClCompile.CodeSeg)' == ''">$(CodeSeg)</CodeSeg>
        <ConstSeg                      Condition="'%(ClCompile.ConstSeg)' == ''">$(ConstSeg)</ConstSeg>
        <DataSeg                       Condition="'%(ClCompile.DataSeg)' == ''">$(DataSeg)</DataSeg>

        <NoOverlay                     Condition="'%(ClCompile.NoOverlay)' == ''">$(NoOverlay)</NoOverlay>
        <NoGcse                        Condition="'%(ClCompile.NoGcse)' == ''">$(NoGcse)</NoGcse>
        <NoLabelOpt                    Condition="'%(ClCompile.NoLabelOpt)' == ''">$(NoLabelOpt)</NoLabelOpt>
        <NoInvariant                   Condition="'%(ClCompile.NoInvariant)' == ''">$(NoInvariant)</NoInvariant>
        <NoInduction                   Condition="'%(ClCompile.NoInduction)' == ''">$(NoInduction)</NoInduction>
        <NoLoopReverse                 Condition="'%(ClCompile.NoLoopReverse)' == ''">$(NoLoopReverse)</NoLoopReverse>
        <NoPeep                        Condition="'%(ClCompile.NoPeep)' == ''">$(NoPeep)</NoPeep>
        <NoRegParams                   Condition="'%(ClCompile.NoRegParams)' == ''">$(NoRegParams)</NoRegParams>
        <PeepAsm                       Condition="'%(ClCompile.PeepAsm)' == ''">$(PeepAsm)</PeepAsm>
        <PeepReturn                    Condition="'%(ClCompile.PeepReturn)' == ''">$(PeepReturn)</PeepReturn>
        <NoPeepReturn                  Condition="'%(ClCompile.NoPeepReturn)' == ''">$(NoPeepReturn)</NoPeepReturn>
        <PeepFile                      Condition="'%(ClCompile.PeepFile)' == ''">$(PeepFile)</PeepFile>
        <OptimizeCode                  Condition="'%(ClCompile.OptimizeCode)' == ''">$(OptimizeCode)</OptimizeCode>
        <MaxAllocsPerNode              Condition="'%(ClCompile.MaxAllocsPerNode)' == ''">$(MaxAllocsPerNode)</MaxAllocsPerNode>
        <NoLospre                      Condition="'%(ClCompile.NoLospre)' == ''">$(NoLospre)</NoLospre>
        <AllowUnsafeRead               Condition="'%(ClCompile.AllowUnsafeRead)' == ''">$(AllowUnsafeRead)</AllowUnsafeRead>
        <NoStdLibCalls                 Condition="'%(ClCompile.NoStdLibCalls)' == ''">$(NoStdLibCalls)</NoStdLibCalls>

        <DumpAst                       Condition="'%(ClCompile.DumpAst)' == ''">$(DumpAst)</DumpAst>
        <DumpICode                     Condition="'%(ClCompile.DumpICode)' == ''">$(DumpICode)</DumpICode>
        <DumpGraphs                    Condition="'%(ClCompile.DumpGraphs)' == ''">$(DumpGraphs)</DumpGraphs>
        <ICodeInAsm                    Condition="'%(ClCompile.ICodeInAsm)' == ''">$(ICodeInAsm)</ICodeInAsm>
        <VerboseAsm                    Condition="'%(ClCompile.VerboseAsm)' == ''">$(VerboseAsm)</VerboseAsm>

        <IncludeLibraries              Condition="'%(ClCompile.IncludeLibraries)' == ''">$(IncludeLibraries)</IncludeLibraries>
        <AdditionalLibraryPath         Condition="'%(ClCompile.AdditionalLibraryPath)' == ''">$(AdditionalLibraryPath)</AdditionalLibraryPath>
        <OutputFormat                  Condition="'%(ClCompile.OutputFormat)' == ''">$(OutputFormat)</OutputFormat>
        <XRamLocation                  Condition="'%(ClCompile.XRamLocation)' == ''">$(XRamLocation)</XRamLocation>
        <XRamSize                      Condition="'%(ClCompile.XRamSize)' == ''">$(XRamSize)</XRamSize>
        <IRamSize                      Condition="'%(ClCompile.IRamSize)' == ''">$(IRamSize)</IRamSize>
        <XStackLocation                Condition="'%(ClCompile.XStackLocation)' == ''">$(XStackLocation)</XStackLocation>
        <CodeLocation                  Condition="'%(ClCompile.CodeLocation)' == ''">$(CodeLocation)</CodeLocation>
        <CodeSize                      Condition="'%(ClCompile.CodeSize)' == ''">$(CodeSize)</CodeSize>
        <StackLocation                 Condition="'%(ClCompile.StackLocation)' == ''">$(StackLocation)</StackLocation>
        <DataLocation                  Condition="'%(ClCompile.DataLocation)' == ''">$(DataLocation)</DataLocation>
        <IDataLocation                 Condition="'%(ClCompile.IDataLocation)' == ''">$(IDataLocation)</IDataLocation>
        <NoOptSdccInAsm                Condition="'%(ClCompile.NoOptSdccInAsm)' == ''">$(NoOptSdccInAsm)</NoOptSdccInAsm>

        <KeepComments                  Condition="'%(ClCompile.KeepComments)' == ''">$(KeepComments)</KeepComments>
        <PreprocessorOutput            Condition="'%(ClCompile.PreprocessorOutput)' == ''">$(PreprocessorOutput)</PreprocessorOutput>
        <PedanticParseNum              Condition="'%(ClCompile.PedanticParseNum)' == ''">$(PedanticParseNum)</PedanticParseNum>


        <UseACallAimp                  Condition="'%(ClCompile.UseACallAimp)' == ''">$(UseACallAimp)</UseACallAimp>
        <UseAssembler                  Condition="'%(ClCompile.UseAssembler)' == ''">$(UseAssembler)</UseAssembler>
        <CalleeSavesBC                 Condition="'%(ClCompile.CalleeSavesBC)' == ''">$(CalleeSavesBC)</CalleeSavesBC>
        <DumpCallTree                  Condition="'%(ClCompile.DumpCallTree)' == ''">$(DumpCallTree)</DumpCallTree>
        <DebugRalloc                   Condition="'%(ClCompile.DebugRalloc)' == ''">$(DebugRalloc)</DebugRalloc>
        <DebugExtra                    Condition="'%(ClCompile.DebugExtra)' == ''">$(DebugExtra)</DebugExtra>
        <EnablePeeps                   Condition="'%(ClCompile.EnablePeeps)' == ''">$(EnablePeeps)</EnablePeeps>
        <EmitExterns                   Condition="'%(ClCompile.EmitExterns)' == ''">$(EmitExterns)</EmitExterns>
        <NoEmitFramePointer            Condition="'%(ClCompile.NoEmitFramePointer)' == ''">$(NoEmitFramePointer)</NoEmitFramePointer>
        <GStack                        Condition="'%(ClCompile.GStack)' == ''">$(GStack)</GStack>
        <IVTAddress                    Condition="'%(ClCompile.IVTAddress)' == ''">$(IVTAddress)</IVTAddress>
        <AltLinker                     Condition="'%(ClCompile.AltLinker)' == ''">$(AltLinker)</AltLinker>
        <MemoryModel                   Condition="'%(ClCompile.MemoryModel)' == ''">$(MemoryModel)</MemoryModel>
        <EnableMPLABCompatibilityMode  Condition="'%(ClCompile.EnableMPLABCompatibilityMode)' == ''">$(EnableMPLABCompatibilityMode)</EnableMPLABCompatibilityMode>
        <NoCrt                         Condition="'%(ClCompile.NoCrt)' == ''">$(NoCrt)</NoCrt>
        <NoExtendedInstructions        Condition="'%(ClCompile.NoExtendedInstructions)' == ''">$(NoExtendedInstructions)</NoExtendedInstructions>
        <NoOptimizeGoTo                Condition="'%(ClCompile.NoOptimizeGoTo)' == ''">$(NoOptimizeGoTo)</NoOptimizeGoTo>
        <NoPackIRam                    Condition="'%(ClCompile.NoPackIRam)' == ''">$(NoPackIRam)</NoPackIRam>
        <NoPCodeOptimization           Condition="'%(ClCompile.NoPCodeOptimization)' == ''">$(NoPCodeOptimization)</NoPCodeOptimization>
        <NoRetWithoutCall              Condition="'%(ClCompile.NoRetWithoutCall)' == ''">$(NoRetWithoutCall)</NoRetWithoutCall>
        <NoStdCrt                      Condition="'%(ClCompile.NoStdCrt)' == ''">$(NoStdCrt)</NoStdCrt>
        <NoWarnNonFree                 Condition="'%(ClCompile.NoWarnNonFree)' == ''">$(NoWarnNonFree)</NoWarnNonFree>
        <NoDefaultLibs                 Condition="'%(ClCompile.NoDefaultLibs)' == ''">$(NoDefaultLibs)</NoDefaultLibs>
        <BankSelectOptimizationLevel   Condition="'%(ClCompile.BankSelectOptimizationLevel)' == ''">$(BankSelectOptimizationLevel)</BankSelectOptimizationLevel>
        <UseOldRegisterAllocator       Condition="'%(ClCompile.UseOldRegisterAllocator)' == ''">$(UseOldRegisterAllocator)</UseOldRegisterAllocator>
        <OptimizeCmp                   Condition="'%(ClCompile.OptimizeCmp)' == ''">$(OptimizeCmp)</OptimizeCmp>
        <OptimizeDataFlow              Condition="'%(ClCompile.OptimizeDataFlow)' == ''">$(OptimizeDataFlow)</OptimizeDataFlow>
        <PackIRam                      Condition="'%(ClCompile.PackIRam)' == ''">$(PackIRam)</PackIRam>
        <ParamsInBank1                 Condition="'%(ClCompile.ParamsInBank1)' == ''">$(ParamsInBank1)</ParamsInBank1>
        <PCodeVerbose                  Condition="'%(ClCompile.PCodeVerbose)' == ''">$(PCodeVerbose)</PCodeVerbose>
        <NoBankSelect                  Condition="'%(ClCompile.NoBankSelect)' == ''">$(NoBankSelect)</NoBankSelect>
        <IOPortMode                    Condition="'%(ClCompile.IOPortMode)' == ''">$(IOPortMode)</IOPortMode>
        <ReplaceUDataWith              Condition="'%(ClCompile.ReplaceUDataWith)' == ''">$(ReplaceUDataWith)</ReplaceUDataWith>
        <ProtectSPUpdate               Condition="'%(ClCompile.ProtectSPUpdate)' == ''">$(ProtectSPUpdate)</ProtectSPUpdate>
        <StackModel                    Condition="'%(ClCompile.StackModel)' == ''">$(StackModel)</StackModel>
        <ReserveRegsIY                 Condition="'%(ClCompile.ReserveRegsIY)' == ''">$(ReserveRegsIY)</ReserveRegsIY>
        <StackBits                     Condition="'%(ClCompile.StackBits)' == ''">$(StackBits)</StackBits>
        <StackSize                     Condition="'%(ClCompile.StackSize)' == ''">$(StackSize)</StackSize>
        <TINILibraryId                 Condition="'%(ClCompile.TINILibraryId)' == ''">$(TINILibraryId)</TINILibraryId>
        <UseAccelerator                Condition="'%(ClCompile.UseAccelerator)' == ''">$(UseAccelerator)</UseAccelerator>
        <UseCRT                        Condition="'%(ClCompile.UseCRT)' == ''">$(UseCRT)</UseCRT>
        <ExtendedInstructionSet        Condition="'%(ClCompile.ExtendedInstructionSet)' == ''">$(ExtendedInstructionSet)</ExtendedInstructionSet>

        <CodeBank                     Condition="'%(ClCompile.CodeBank)' == ''">$(CodeBank)</CodeBank>
        <DataBank                     Condition="'%(ClCompile.DataBank)' == ''">$(DataBank)</DataBank>

        <AdditionalOptions             Condition="'%(ClCompile.AdditionalOptions)' == ''">$(AdditionalOptions)</AdditionalOptions>

      </ClCompile>
    </ItemGroup>

    <MakeDir Directories="$(IntDir)"/>

    <SDCCCompile Sources="@(ClCompile)"

                SourceInput                 ="%(ClCompile.FullPath)"
                OutputFile                  ="%(ClCompile.OutputFile)"

                PortType                    ="%(ClCompile.PortType)"
                ProcessorType               ="%(ClCompile.ProcessorType)"

                Verbose                     ="%(ClCompile.Verbose)"
                OutputMacros                ="%(ClCompile.OutputMacros)"
                PreprocessorDefinitions     ="%(ClCompile.SDCCPreprocessorDefinitions)"
                AdditionalIncludeDirectories="%(ClCompile.AdditionalIncludeDirectories)"
                AssertAnswer                ="%(ClCompile.AssertAnswer)"
                PreprocessorUndefines       ="%(ClCompile.PreprocessorUndefines)"
                DependencyRule              ="%(ClCompile.DependencyRule)"
                PreprocessorOptions         ="%(ClCompile.PreprocessorOptions)"
                AssemblerOptions            ="%(ClCompile.AssemblerOptions)"
                LinkerOptions               ="%(ClCompile.LinkerOptions)"
                PrintSearchDirs             ="%(ClCompile.PrintSearchDirs)"
                NoStdLib                    ="%(ClCompile.NoStdLib)"
                NoStdInc                    ="%(ClCompile.NoStdInc)"
                LessPedantic                ="%(ClCompile.LessPedantic)"
                DisableWarning              ="%(ClCompile.DisableWarning)"
                WarnErrors                  ="%(ClCompile.WarnErrors)"
                Debug                       ="%(ClCompile.Debug)"
                Cyclomatic                  ="%(ClCompile.Cyclomatic)"
                CStandard                   ="%(ClCompile.CStandard)"
                DollarsInId                 ="%(ClCompile.DollarsInId)"
                SignedChar                  ="%(ClCompile.SignedChar)"
                UseNonFree                  ="%(ClCompile.UseNonFree)"

                StackAuto                   ="%(ClCompile.StackAuto)"
                ExternalStack               ="%(ClCompile.ExternalStack)"
                IntLongReent                ="%(ClCompile.IntLongReent)"
                FloatReent                  ="%(ClCompile.FloatReent)"
                XRamMovec                   ="%(ClCompile.XRamMovec)"
                CalleeSaves                 ="%(ClCompile.CalleeSaves)"
                Profile                     ="%(ClCompile.Profile)"
                OmitFramePointer            ="%(ClCompile.OmitFramePointer)"
                AllCalleeSaves              ="%(ClCompile.AllCalleeSaves)"
                StackProbe                  ="%(ClCompile.StackProbe)"
                NoXinitOpt                  ="%(ClCompile.NoXinitOpt)"
                NoCCodeInAsm                ="%(ClCompile.NoCCodeInAsm)"
                NoPeepComments              ="%(ClCompile.NoPeepComments)"
                CodeSeg                     ="%(ClCompile.CodeSeg)"
                ConstSeg                    ="%(ClCompile.ConstSeg)"
                DataSeg                     ="%(ClCompile.DataSeg)"

                NoOverlay                   ="%(ClCompile.NoOverlay)"
                NoGcse                      ="%(ClCompile.NoGcse)"
                NoLabelOpt                  ="%(ClCompile.NoLabelOpt)"
                NoInvariant                 ="%(ClCompile.NoInvariant)"
                NoInduction                 ="%(ClCompile.NoInduction)"
                NoLoopReverse               ="%(ClCompile.NoLoopReverse)"
                NoPeep                      ="%(ClCompile.NoPeep)"
                NoRegParams                 ="%(ClCompile.NoRegParams)"
                PeepAsm                     ="%(ClCompile.PeepAsm)"
                PeepReturn                  ="%(ClCompile.PeepReturn)"
                NoPeepReturn                ="%(ClCompile.NoPeepReturn)"
                PeepFile                    ="%(ClCompile.PeepFile)"
                OptimizeCode                ="%(ClCompile.OptimizeCode)"
                MaxAllocsPerNode            ="%(ClCompile.MaxAllocsPerNode)"
                NoLospre                    ="%(ClCompile.NoLospre)"
                AllowUnsafeRead             ="%(ClCompile.AllowUnsafeRead)"
                NoStdLibCalls               ="%(ClCompile.NoStdLibCalls)"

                DumpAst                     ="%(ClCompile.DumpAst)"
                DumpICode                   ="%(ClCompile.DumpICode)"
                DumpGraphs                  ="%(ClCompile.DumpGraphs)"
                ICodeInAsm                  ="%(ClCompile.ICodeInAsm)"
                VerboseAsm                  ="%(ClCompile.VerboseAsm)"

                IncludeLibraries            ="%(ClCompile.IncludeLibraries)"
                AdditionalLibraryPath       ="%(ClCompile.AdditionalLibraryPath)"
                OutputFormat                ="%(ClCompile.OutputFormat)"
                XRamLocation                ="%(ClCompile.XRamLocation)"
                XRamSize                    ="%(ClCompile.XRamSize)"
                IRamSize                    ="%(ClCompile.IRamSize)"
                XStackLocation              ="%(ClCompile.XStackLocation)"
                CodeLocation                ="%(ClCompile.CodeLocation)"
                CodeSize                    ="%(ClCompile.CodeSize)"
                StackLocation               ="%(ClCompile.StackLocation)"
                DataLocation                ="%(ClCompile.DataLocation)"
                IDataLocation               ="%(ClCompile.IDataLocation)"
                NoOptSdccInAsm              ="%(ClCompile.NoOptSdccInAsm)"

                KeepComments                ="%(ClCompile.KeepComments)"
                PreprocessorOutput          ="%(ClCompile.PreprocessorOutput)"
                PedanticParseNum            ="%(ClCompile.PedanticParseNum)"

                UseACallAimp                ="%(ClCompile.UseACallAimp)"
                UseAssembler                ="%(ClCompile.UseAssembler)"
                CalleeSavesBC               ="%(ClCompile.CalleeSavesBC)"
                DumpCallTree                ="%(ClCompile.DumpCallTree)"
                DebugRalloc                 ="%(ClCompile.DebugRalloc)"
                DebugExtra                  ="%(ClCompile.DebugExtra)"
                EnablePeeps                 ="%(ClCompile.EnablePeeps)"
                EmitExterns                 ="%(ClCompile.EmitExterns)"
                NoEmitFramePointer          ="%(ClCompile.NoEmitFramePointer)"
                GStack                      ="%(ClCompile.GStack)"
                IVTAddress                  ="%(ClCompile.IVTAddress)"
                AltLinker                   ="%(ClCompile.AltLinker)"
                MemoryModel                 ="%(ClCompile.MemoryModel)"
                EnableMPLABCompatibilityMode="%(ClCompile.EnableMPLABCompatibilityMode)"
                NoCrt                       ="%(ClCompile.NoCrt)"
                NoExtendedInstructions      ="%(ClCompile.NoExtendedInstructions)"
                NoOptimizeGoTo              ="%(ClCompile.NoOptimizeGoTo)"
                NoPackIRam                  ="%(ClCompile.NoPackIRam)"
                NoPCodeOptimization         ="%(ClCompile.NoPCodeOptimization)"
                NoRetWithoutCall            ="%(ClCompile.NoRetWithoutCall)"
                NoStdCrt                    ="%(ClCompile.NoStdCrt)"
                NoWarnNonFree               ="%(ClCompile.NoWarnNonFree)"
                NoDefaultLibs               ="%(ClCompile.NoDefaultLibs)"
                BankSelectOptimizationLevel ="%(ClCompile.BankSelectOptimizationLevel)"
                UseOldRegisterAllocator     ="%(ClCompile.UseOldRegisterAllocator)"
                OptimizeCmp                 ="%(ClCompile.OptimizeCmp)"
                OptimizeDataFlow            ="%(ClCompile.OptimizeDataFlow)"
                PackIRam                    ="%(ClCompile.PackIRam)"
                ParamsInBank1               ="%(ClCompile.ParamsInBank1)"
                PCodeVerbose                ="%(ClCompile.PCodeVerbose)"
                NoBankSelect                ="%(ClCompile.NoBankSelect)"
                IOPortMode                  ="%(ClCompile.IOPortMode)"
                ReplaceUDataWith            ="%(ClCompile.ReplaceUDataWith)"
                ProtectSPUpdate             ="%(ClCompile.ProtectSPUpdate)"
                StackModel                  ="%(ClCompile.StackModel)"
                ReserveRegsIY               ="%(ClCompile.ReserveRegsIY)"
                StackBits                   ="%(ClCompile.StackBits)"
                StackSize                   ="%(ClCompile.StackSize)"
                TINILibraryId               ="%(ClCompile.TINILibraryId)"
                UseAccelerator              ="%(ClCompile.UseAccelerator)"
                UseCRT                      ="%(ClCompile.UseCRT)"
                ExtendedInstructionSet      ="%(ClCompile.ExtendedInstructionSet)"

                CodeBank                    ="%(ClCompile.CodeBank)"
                DataBank                    ="%(ClCompile.DataBank)"

                AdditionalOptions           ="%(ClCompile.AdditionalOptions)"

                ToolPath                    ="$(SDCCBinPath)"
                MinimalRebuildFromTracking  ="true"
                TrackerLogDirectory         ="$(IntDir)$(TLogLocation)"
                ContinueOnError             ="ErrorAndContinue"
                />

    <!-- Convert the EOL for lib linking. -->
    <SDCCRelEolUpdater SourceFile         ="%(ClCompile.OutputFile)"/>
  </Target>

  <!-- 
  ********************************************************************************
  * SDCC Specific AsmCompile
  ********************************************************************************
  -->
  <Target Name="AsmCompile" Inputs="@(AsmCompile)"
          Outputs="@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)')">
    <Message Importance="High" Text="Compiling Assembly Source Files:"/>

    <ItemGroup>
      <AsmCompile>
        <OutputFile>$(IntDir)%(Filename)$(ObjectExtension)</OutputFile>
        <AdditionalOptions                      Condition="'%(AsmCompile.AdditionalOptions)' == ''">$(AssembleAdditionalOptions)</AdditionalOptions>
        <PortType                               Condition="'%(AsmCompile.PortType)' == ''">$(PortType)</PortType>
        <ExternalAssembler                      Condition="'%(AsmCompile.ExternalAssembler)' == ''">$(ExternalAssembler)</ExternalAssembler>
        <NumberFormat                           Condition="'%(AsmCompile.NumberFormat)' == ''">$(NumberFormat)</NumberFormat>
        <UndefinedSymbolsMadeGlobal             Condition="'%(AsmCompile.UndefinedSymbolsMadeGlobal)' == ''">$(UndefinedSymbolsMadeGlobal)</UndefinedSymbolsMadeGlobal>
        <AllUserSymbolsMadeGlobal               Condition="'%(AsmCompile.AllUserSymbolsMadeGlobal)' == ''">$(AllUserSymbolsMadeGlobal)</AllUserSymbolsMadeGlobal>
        <ListingDefineFormat                    Condition="'%(AsmCompile.ListingDefineFormat)' == ''">$(ListingDefineFormat)</ListingDefineFormat>
        <DisableInstructionCycleCountInListing  Condition="'%(AsmCompile.DisableInstructionCycleCountInListing)' == ''">$(DisableInstructionCycleCountInListing)</DisableInstructionCycleCountInListing>
        <EnableNoICEDebugSymbols                Condition="'%(AsmCompile.EnableNoICEDebugSymbols)' == ''">$(EnableNoICEDebugSymbols)</EnableNoICEDebugSymbols>
        <EnableSDCCDebugSymbols                 Condition="'%(AsmCompile.EnableSDCCDebugSymbols)' == ''">$(EnableSDCCDebugSymbols)</EnableSDCCDebugSymbols>
        <CreateListFile                         Condition="'%(AsmCompile.CreateListFile)' == ''">$(CreateListFile)</CreateListFile>
        <CreateObjectFile                       Condition="'%(AsmCompile.CreateObjectFile)' == ''">$(CreateObjectFile)</CreateObjectFile>
        <CreateSymbolFile                       Condition="'%(AsmCompile.CreateSymbolFile)' == ''">$(CreateSymbolFile)</CreateSymbolFile>
        <DisableAutoListingPagination           Condition="'%(AsmCompile.DisableAutoListingPagination)' == ''">$(DisableAutoListingPagination)</DisableAutoListingPagination>
        <DisableListProcessing                  Condition="'%(AsmCompile.DisableListProcessing)' == ''">$(DisableListProcessing)</DisableListProcessing>
        <UseWideListingFormat                   Condition="'%(AsmCompile.UseWideListingFormat)' == ''">$(UseWideListingFormat)</UseWideListingFormat>
        <DisableCaseSensitivity                 Condition="'%(AsmCompile.DisableCaseSensitivity)' == ''">$(DisableCaseSensitivity)</DisableCaseSensitivity>
        <RelocatableReferenceMode               Condition="'%(AsmCompile.RelocatableReferenceMode)' == ''">$(RelocatableReferenceMode)</RelocatableReferenceMode>
      </AsmCompile>
    </ItemGroup>

    <MakeDir Directories="$(IntDir)"/>

    <SDCCAssemble Sources                  ="@(AsmCompile)"

               SourceInput                 ="%(AsmCompile.FullPath)"
               OutputFile                  ="%(AsmCompile.OutputFile)"

               AdditionalOptions           ="%(AsmCompile.AdditionalOptions)"

               PortType                    ="%(AsmCompile.PortType)"
               ExternalAssembler           ="%(AsmCompile.ExternalAssembler)"

               NumberFormat                ="%(AsmCompile.NumberFormat)"
               UndefinedSymbolsMadeGlobal  ="%(AsmCompile.UndefinedSymbolsMadeGlobal)"
               AllUserSymbolsMadeGlobal    ="%(AsmCompile.AllUserSymbolsMadeGlobal)"
               ListingDefineFormat         ="%(AsmCompile.ListingDefineFormat)"
               DisableInstructionCycleCountInListing ="%(AsmCompile.DisableInstructionCycleCountInListing)"
               EnableNoICEDebugSymbols     ="%(AsmCompile.EnableNoICEDebugSymbols)"
               EnableSDCCDebugSymbols      ="%(AsmCompile.EnableSDCCDebugSymbols)"
               CreateListFile              ="%(AsmCompile.CreateListFile)"
               CreateObjectFile            ="%(AsmCompile.CreateObjectFile)"
               CreateSymbolFile            ="%(AsmCompile.CreateSymbolFile)"
               DisableAutoListingPagination="%(AsmCompile.DisableAutoListingPagination)"
               DisableListProcessing       ="%(AsmCompile.DisableListProcessing)"
               UseWideListingFormat        ="%(AsmCompile.UseWideListingFormat)"
               DisableCaseSensitivity      ="%(AsmCompile.DisableCaseSensitivity)"
               RelocatableReferenceMode    ="%(AsmCompile.RelocatableReferenceMode)"
               AdditionalIncludeDirectories="%(AsmCompile.AdditionalIncludeDirectories)"

               ToolPath                    ="$(SDCCBinPath)"
               MinimalRebuildFromTracking  ="true"
               TrackerLogDirectory         ="$(IntDir)$(TLogLocation)"
               ContinueOnError             ="ErrorAndContinue"
               />

    <!-- Convert the EOL for lib linking. -->
    <SDCCRelEolUpdater SourceFile         ="%(AsmCompile.OutputFile)"/>
  </Target>

  <!-- 
  ********************************************************************************
  * SDCC Specific Link
  ********************************************************************************
  -->
  <Target Name="ResolveLibraryReferences">
    <SDCCResolveLibraries
        Libraries           ="$(IncludeLibraries)"
        Directories         ="$(AdditionalLibraryPath)">
      <Output TaskParameter="FullLibraries" PropertyName="FullLibraryInfo"/>
    </SDCCResolveLibraries>

    <ItemGroup>
      <ResolvedLibraries Include="$(FullLibraryInfo)"/>
    </ItemGroup>
    <PropertyGroup>
      <ResolvedLibraries>$(FullLibraryInfo)</ResolvedLibraries>
    </PropertyGroup>
  </Target>


  <Target Name="ClLink" DependsOnTargets="PreLinkEvent;ResolveLibraryReferences"
          Inputs="@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)');@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)');@(ResolvedLibraries)"
          Outputs="$(OutDir)$(ProjectName)$(IntBinaryExtension)">

    <PropertyGroup>
      <LibraryLinkFiles>@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)');@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)')</LibraryLinkFiles>
    </PropertyGroup>

    <PropertyGroup Condition="'$(BuildFormat)' == 'Library'">
      <LibraryCdbSource>@(ClCompile->'$(IntDir)%(Filename).adb');@(AsmCompile->'$(IntDir)%(Filename).adb')</LibraryCdbSource>
    </PropertyGroup>

    <!-- Collect debug items -->
    <ItemGroup Condition="'$(BuildFormat)' != 'Library'">
      <CdbSourceFiles Include="$(OutDir)$(ProjectName).source.cdb;@(ResolvedLibraries->'%(RootDir)%(Directory)%(Filename).cdb')"/>
    </ItemGroup>

    <MakeDir Directories="$(OutDir)"/>

  </Target>

  <Target Name="ClLinkBinary"
          AfterTargets="ClLink"
          Condition="'$(BuildFormat)' != 'Library'"
          Inputs="$(LibraryLinkFiles);@(ResolvedLibraries)"
          Outputs="$(OutDir)$(ProjectName)$(IntBinaryExtension)">

    <Message Importance="High" Text="Linking Source Files: @(ClCompile, ' ') @(AsmCompile, ' ')"/>
    <SDCCLink
              Sources                      ="@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)');@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)')"

              SourceInput                  ="@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)');@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)')"
              OutputFile                   ="$(OutDir)$(ProjectName)$(IntBinaryExtension)"

              EchoMode                     ="$(EchoMode)"

              ExternalLinker               ="$(ExternalLinker)"
              PortType                     ="$(PortType)"

              LibraryPaths                 ="$(AdditionalLibraryPath)"
              LibraryFiles                 ="$(IncludeLibraries)"

              AreaBaseAddress              ="$(AreaBaseAddress)"
              GlobalSymbols                ="$(GlobalSymbols)"

              GenerateMapFile              ="$(GenerateMapFile)"
              WideListMapFormatEnabled     ="$(WideListMapFormatEnabled)"
              MapNumberFormat              ="$(MapNumberFormat)"

              OutputFormat                 ="$(OutputFormat)"
              NoIceDebugOutput             ="$(NoIceDebugOutput)"
              SDCDBDebugOutput             ="$(SDCDBDebugOutput)"

              UpdateListingFiles           ="$(UpdateListingFiles)"

              DisableSymbolCaseSensitivity ="$(DisableSymbolCaseSensitivity)"

              IRamSize                     ="$(IRamSize)"
              XRamSize                     ="$(XRamSize)"
              CodeSize                     ="$(CodeSize)"
              GenerateMemSummaryFile       ="$(GenerateMemSummaryFile)"
              PackInternalRam              ="$(PackInternalRam)"
              StackSize                    ="$(StackSize)"

              CustomCrt                    ="$(CustomCrt)"

              AdditionalOptions            ="$(LinkAdditionalOptions)"

              ToolPath                     ="$(SDCCBinPath)"
              />
    <Copy Condition="'$(UseCustomCdbGeneration)' == 'true' and '$(SDCDBDebugOutput)' == 'true' and Exists('$(OutDir)$(ProjectName).cdb')" SourceFiles="$(OutDir)$(ProjectName).cdb" DestinationFiles="$(OutDir)$(ProjectName).source.cdb"
          SkipUnchangedFiles="true"/>
    <SDCCLibCdbGenerator Condition="'$(UseCustomCdbGeneration)' == 'true' and '$(SDCDBDebugOutput)' == 'true'"
                         InputFiles="@(CdbSourceFiles)"
                         OutputFile="$(OutDir)$(ProjectName).cdb"
                         />
  </Target>

  <Target Name="ClLinkLibrary"
          AfterTargets="ClLink"
          Condition="'$(BuildFormat)' == 'Library'"
          Inputs="$(LibraryLinkFiles)"
          Outputs="$(OutDir)$(ProjectName)$(Extension)">

    <Message Importance="High" Text="Building Library From Source Files: @(ClCompile, ' ') @(AsmCompile, ' ')"/>
    <SDCCLib
             Sources                        ="$(LibraryLinkFiles)"
             AdditionalOptions              ="$(LibAdditionalOptions)"

             SourceInput                    ="$(LibraryLinkFiles)"
             OutputFile                     ="$(OutDir)$(ProjectName)$(Extension)"

             ToolPath                       ="$(SDCCBinPath)"
             />
    <SDCCLibCdbGenerator Condition="'$(UseCustomCdbGeneration)' == 'true' and '$(SDCDBDebugOutput)' == 'true'"
                         InputFiles="$(LibraryCdbSource)"
                         OutputFile="$(OutDir)$(ProjectName).cdb"/>
  </Target>

  <!-- TODO: Add GBDK specific target to validate the IHX file. -->

  <Target Name="GenerateBinary"
          AfterTargets="ClLinkBinary"
          Condition="'$(BuildFormat)' != 'Library'"
          Inputs="$(OutDir)$(ProjectName)$(IntBinaryExtension)"
          Outputs="$(OutDir)$(ProjectName)$(Extension)">

    <SDCCMakeBin OutputFile                 ="$(OutDir)$(ProjectName)$(Extension)"
                 Sources                    ="$(OutDir)$(ProjectName)$(IntBinaryExtension)"
                 SourceInput                ="$(OutDir)$(ProjectName)$(IntBinaryExtension)"

                 PackBinary                 ="$(PackBinary)"
                 BinarySize                 ="$(BinarySize)"
                 GenerateGameBoyBinary      ="$(GenerateGameBoyBinary)"

                 GameBoyRomBankCount        ="$(GameBoyRomBankCount)"
                 GameBoyRamBankCount        ="$(GameBoyRamBankCount)"
                 GameBoyMemoryBankController="$(GameBoyMemoryBankController)"
                 GameBoyCartridgeName       ="$(GameBoyCartridgeName)"
                 GameBoyColor               ="$(GameBoyColor)"

                 AdditionalOptions          ="$(MakeBinAdditionalOptions)"

                 ToolPath                   ="$(SDCCBinPath)"
    />
  </Target>


  <!-- 
  ********************************************************************************
  * Visual Studio SDCC specific build targets.
  ********************************************************************************
  -->
  <Target Name="CoreClean">
    <Message Importance="High" Text="Clean Files... "/>
    <!--
    <VCMessage Code="MSBXXXX" Type="Warning" Arguments="Testing NMakeCleanCommandLine"/>
    -->
    <Delete Files="@(ClCompile->'$(IntDir)%(Filename)$(ObjectExtension)')"/>
    <Delete Files="@(ClCompile->'$(IntDir)%(Filename).lst')"/>
    <Delete Files="@(ClCompile->'$(IntDir)%(Filename).sym')"/>
    <Delete Files="@(ClCompile->'$(IntDir)%(Filename).asm')"/>

    <Delete Files="@(AsmCompile->'$(IntDir)%(Filename)$(ObjectExtension)')"/>
    <Delete Files="@(AsmCompile->'$(IntDir)%(Filename).sym')"/>
    <Delete Files="@(AsmCompile->'$(IntDir)%(Filename).lst')"/>

    <Delete Files="$(OutDir)$(ProjectName)$(Extension)"/>
    <Delete Files="$(OutDir)$(ProjectName)$(MapExtension)"/>
    <Delete Files="$(OutDir)$(ProjectName)$(IntBinaryExtension)"/>
    <Delete Files="$(OutDir)$(ProjectName).noi"/>
    <Delete Files="$(OutDir)$(ProjectName).cdb"/>
    <Delete Files="$(OutDir)$(ProjectName).source.cdb"/>
  </Target>

  <Target Name="Build" DependsOnTargets="ValidateSDCCPath;PreBuildEvent;ClCompile;AsmCompile;ClLink;PostBuildEvent">
    <!--
    <VCMessage Code="MSBXXXX" Type="Warning" Arguments="Testing NMakeBuildCommandLine" />
    -->
  </Target>

  <Target Name="Rebuild" DependsOnTargets="CoreClean;Build">
    <!--
    <VCMessage Code="MSBXXXX" Type="Warning" Arguments="Testing NMakeReBuildCommandLine"/>
    -->
  </Target>

</Project>