<?xml version="1.0" encoding="utf-8"?>
<Rule 
    Name="SDCC" 
    PageTemplate="tool" 
    DisplayName="SDCC" 
    SwitchPrefix="-" 
    Order="10" 
    xmlns="http://schemas.microsoft.com/build/2009/properties" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <Rule.Categories>
    <Category 
      Name="General" 
      DisplayName="General"/>
    <Category
      Name="CCodeGen"
      DisplayName="C Code Generation"/>
    <Category
      Name="COptimization"
      DisplayName="C Optimization"/>
    <Category
      Name="CDebugging"
      DisplayName="C Debugging"/>
    <Category
      Name="Assembler"
      DisplayName="Assembler"/>
    <Category
      Name="Linker"
      DisplayName="Linker"/>
  </Rule.Categories>
  <Rule.DataSource>
    <DataSource 
        Persistence="ProjectFile" 
        Label="" 
        ItemType="ClCompile"
        HasConfigurationCondition="true" />
  </Rule.DataSource>

  <!--
  **************************************
  * General Rules
  **************************************

      - -help                Display this help
  -v  - -version             Display sdcc's version
      - -verbose             Trace calls to the preprocessor, assembler, and linker
  -V                        Execute verbosely. Show sub commands as they are run
  -->
  <BoolProperty
    Name="Verbose"
    DisplayName="Execute Verbosely"
    Description="Execute verbosely. Show sub commands as they are run.    (-V)"
    Category="General" 
    Switch="V" 
    F1Keyword="VC.Project.SDCCCompilerTool.Verbose"
    />
  <!--
  -d                        Output list of macro definitions in effect. Use with -E
  -->
  <BoolProperty
    Name="OutputMacros"
    DisplayName="Output Macro List"
    Description="Output list of macro definitions in effect. Use with -E.    (-d)"
    Category="General"
    Switch="d"
    F1Keyword="VC.Project.SDCCCompilerTool.OutputMacros"
    />
  <!--
  -D                        Define macro as in -Dmacro
  -->
  <StringListProperty 
    Name="SDCCPreprocessorDefinitions" 
    DisplayName="Preprocessor Definitions" 
    Description="Command line definition of macros. Passed to the preprocessor.    (-D&lt;macro[=value]&gt;)"
    Category="General" 
    Switch="D " 
    F1Keyword="VC.Project.SDCCCompilerTool.PreprocessorDefinitions"/>
  <!--
  -I                        Add to the include (*.h) path, as in -Ipath
  -->
  <StringListProperty 
    Subtype="folder" 
    Name="SDCCAdditionalIncludeDirectories"
    DisplayName="Additional Include Directories"
    Description="The additional location where the preprocessor will look for &lt;..h&gt; or &quot;..h&quot; files.    (-I&lt;path&gt;)"
    Category="General" 
    Switch="I" 
    F1Keyword="VC.Project.SDCCCompilerTool.AdditionalIncludeDirectories"/>
  <!--
  -A
  -->
  <StringListProperty 
    Name="AssertAnswer"
    DisplayName="Assert Question Answer"
    Description="Assert the answer answer for question, in case it is tested with a preprocessor conditional such as ‘#if #question(answer)’. ‘-A-’ disables the standard assertions that normally describe the target machine.    (-Aquestion(answer))"
    Category="General" 
    Switch="A" 
    F1Keyword="VC.Project.SDCCCompilerTool.AssertAnswer"/>
  <!--
  -U                        Undefine macro as in -Umacro
  -->
  <StringListProperty 
    Name="PreprocessorUndefines"
    DisplayName="Preprocessor Undefines"
    Description="Undefine macro macro. ‘-U’ options are evaluated after all ‘-D’ options, but before any ‘-include’ and ‘-imacros’ options.    (-Umacro)"
    Category="General" 
    Switch="U" 
    F1Keyword="VC.Project.SDCCCompilerTool.PreprocessorUndefines"/>
  <!--
  -M                        Preprocessor option
  -->
  <EnumProperty 
    Name="DependencyRule" 
    DisplayName="Output Dependency Rules" 
    Description="Output make rules for dependencies." 
    Category="General" 
    F1Keyword="VC.Project.SDCCCompilerTool.DependencyRule">
      <EnumValue 
        Name="All Headers" 
        Switch="M" 
        DisplayName="All Headers" 
        Description="Tell the preprocessor to output a rule suitable for make describing the dependencies of each object file. For each source file, the preprocessor outputs one make-rule whose target is the object file name for that source file and whose dependencies are all the files ‘#include’d in it. This rule may be a single line or may be continued with ‘\’-newline if it is long. The list of rules is printed on standard output instead of the preprocessed C program. ‘-M’ implies ‘-E’    (-M)."/>
      <EnumValue 
        Name="User Headers Only" 
        Switch="MM" 
        DisplayName="User Headers" 
        Description="Like ‘-M’ but the output mentions only the user header files included with ‘#include &quot;file&quot;’. Systemheader files included with ‘#include &lt;file&gt;’ are omitted.    (-MM)"/>
  </EnumProperty>
  <!--
  -W                        Pass through options to the pre-processor (p), assembler (a) or linker (l)
  -->
  <StringListProperty 
    Name="PreprocessorOptions"
    CommandLineValueSeparator=","
    DisplayName="Preprocessor Options"
    Description="Pass the preprocessorOption to the preprocessor sdcpp.    (-Wp preprocessorOption[,preprocessorOption]...)"
    Category="General" 
    Switch="Wp " 
    F1Keyword="VC.Project.SDCCCompilerTool.PreprocessorOptions"/>
  <StringListProperty
    Name="AssemblerOptions"
    CommandLineValueSeparator=","
    DisplayName="Assembler Options"
    Description="Pass the assemblerOption to the assembler sdcpp.    (-Wa assemblerOption[,assemblerOption]...)"
    Category="General"
    Switch="Wa "
    F1Keyword="VC.Project.SDCCCompilerTool.AssemblerOptions"/>
  <!-- NOTE: the linker is run independently.
  <StringListProperty
    Name="LinkerOptions"
    CommandLineValueSeparator=","
    DisplayName="Linker Options"
    Description="Pass the linkerOption to the linker sdcpp.    (-Wl linkerOption[,linkerOption]...)"
    Category="General"
    Switch="Wl "
    F1Keyword="VC.Project.SDCCCompilerTool.LinkerOptions"/>
  -->
  <!--
  -S                        Compile only; do not assemble or link
  -c  - -compile-only        Compile and assemble, but do not link
  -E  - -preprocessonly      Preprocess only, do not compile
      - -c1mode              Act in c1 mode.  The standard input is preprocessed code, the output is assembly code.
  -o                        Place the output into the given path resp. file
      - -print-search-dirs   display the directories in the compiler's search path
  -->
  <BoolProperty 
    Name="PrintSearchDirs" 
    DisplayName="Print Search Directories" 
    Description="Display the directories in the compiler's search path.     (--print-search-dirs)"
    Category="General" 
    Switch="-print-search-dirs" 
    F1Keyword="VC.Project.SDCCCompilerTool.PrintSearchDirs"/>
  <!--
      - -vc                  messages are compatible with Micro$oft visual studio
      - -use-stdout          send errors to stdout instead of stderr
      - -nostdlib            Do not include the standard library directory in the search path
  -->
  <BoolProperty
    Name="NoStdLib"
    DisplayName="No Standard Library"
    Description="Do not include the standard library directory in the search path.     (--nostdlib)"
    Category="General"
    Switch="-nostdlib"
    F1Keyword="VC.Project.SDCCCompilerTool.NoStdLib"/>
  <!--
      - -nostdinc            Do not include the standard include directory in the search path
  -->
  <BoolProperty
    Name="NoStdInc"
    DisplayName="No Standard Includes"
    Description="Do not include the standard include directory in the search path.     (--nostdlib)"
    Category="General"
    Switch="-nostdinc"
    F1Keyword="VC.Project.SDCCCompilerTool.NoStdInc"/>
  <!--
      - -less-pedantic       Disable some of the more pedantic warnings
  -->
  <BoolProperty
    Name="LessPedantic"
    DisplayName="Less Pedantic"
    Description="Disable some of the more pedantic warnings.     (--less-pedantic)"
    Category="General"
    Switch="-less-pedantic"
    F1Keyword="VC.Project.SDCCCompilerTool.LessPedantic"/>
  <!--
      - -disable-warning     <nnnn> Disable specific warning
  -->
  <StringListProperty
    Name="DisableWarning"
    DisplayName="Disable Warning"
    Description="Disable specific warning    (--disable-warning &lt;num&gt;)"
    Category="General"
    Switch="--disable-warning "
    F1Keyword="VC.Project.SDCCCompilerTool.DisableWarning"/>
  <!--
      - -Werror              Treat the warnings as errors
  -->
  <BoolProperty
    Name="WarnErrors"
    DisplayName="Treat Warnings as Errors"
    Description="Treat Warnings as Errors.     (--Werror)"
    Category="General"
    Switch="-Werror"
    F1Keyword="VC.Project.SDCCCompilerTool.WarnErrors"/>
  <!--
      - -debug               Enable debugging symbol output
  -->
  <BoolProperty
    Name="Debug"
    DisplayName="Enable Debugging Symbols"
    Description="Enable debugging symbol output.     (--debug)"
    Category="General"
    Switch="-debug"
    F1Keyword="VC.Project.SDCCCompilerTool.Debug"/>
  <!--
      - -cyclomatic          Display complexity of compiled functions
  -->
  <BoolProperty
    Name="Cyclomatic"
    DisplayName="Cyclomatic"
    Description="Display complexity of the compiled functions.     (--cyclomatic)"
    Category="General"
    Switch="-cyclomatic"
    F1Keyword="VC.Project.SDCCCompilerTool.Cyclomatic"/>
  <!--
      - -std-c89             Use ISO C90 (aka ANSI C89) standard (slightly incomplete)
      - -std-sdcc89          Use ISO C90 (aka ANSI C89) standard with SDCC extensions
      - -std-c95             Use ISO C95 (aka ISO C94) standard (slightly incomplete)
      - -std-c99             Use ISO C99 standard (incomplete)
      - -std-sdcc99          Use ISO C99 standard with SDCC extensions
      - -std-c11             Use ISO C11 standard (incomplete)
      - -std-sdcc11          Use ISO C11 standard with SDCC extensions (default)
      - -std-c2x             Use ISO C2X standard (incomplete)
      - -std-sdcc2x          Use ISO C2X standard with SDCC extensions
  -->
  <EnumProperty
    Name="CStandard"
    DisplayName="C ISO Standard Format"
    Description="The C ISO Standard Format to use."
    Category="General"
    F1Keyword="VC.Project.SDCCCompilerTool.CStandard">
    <EnumValue
      Name="std-c89"
      Switch="-std-c89"
      DisplayName="ISO C90"
      Description="Use ISO C90 (aka ANSI C89) standard (slightly incomplete)    (--std-c89)."/>
    <EnumValue
      Name="std-sdcc89"
      Switch="-std-sdcc89"
      DisplayName="SDCC ISO C90"
      Description="Use ISO C90 (aka ANSI C89) standard with SDCC extensions   (--std-sdcc89)."/>
    <EnumValue
      Name="std-c95"
      Switch="-std-c95"
      DisplayName="ISO C95"
      Description="Use ISO C95 (aka ISO C94) standard (slightly incomplete)   (--std-c95)."/>
    <EnumValue
      Name="std-c99"
      Switch="-std-c99"
      DisplayName="ISO C99"
      Description="Use ISO C99 standard (slightly incomplete)   (--std-c99)."/>
    <EnumValue
      Name="std-sdcc99"
      Switch="-std-sdcc99"
      DisplayName="SDCC ISO C99"
      Description="Use ISO C99 standard with SDCC extensions   (--std-sdcc99)."/>
    <EnumValue
      Name="std-c11"
      Switch="-std-c11"
      DisplayName="ISO C11"
      Description="Use ISO C11 standard (slightly incomplete)   (--std-c11)."/>
    <EnumValue
      Name="std-sdcc11"
      Switch="-std-sdcc11"
      DisplayName="SDCC ISO C11"
      Description="Use ISO C11 standard with SDCC extensions (default)   (--std-sdcc11)."/>
    <EnumValue
      Name="std-c2x"
      Switch="-std-c2x"
      DisplayName="ISO C2X"
      Description="Use ISO C2X standard (slightly incomplete)   (--std-c2x)."/>
    <EnumValue
      Name="std-sdcc2x"
      Switch="-std-sdcc2x"
      DisplayName="SDCC ISO C2X"
      Description="Use ISO C2X standard with SDCC extensions   (--std-sdcc2x)."/>
  </EnumProperty>
  <!--
      - -fdollars-in-identifiers  Permit '$' as an identifier character
  -->
  <BoolProperty
    Name="DollarsInId"
    DisplayName="Dollars in Identifiers"
    Description="Permit '$' as an identifier character.     (--fdollars-in-identifiers)"
    Category="General"
    Switch="-fdollars-in-identifiers"
    F1Keyword="VC.Project.SDCCCompilerTool.DollarsInId"/>
  <!--
      - -fsigned-char        Make "char" signed by default
  -->
  <BoolProperty
    Name="SignedChar"
    DisplayName="Signed Char"
    Description="Make 'char' signed by default.     (--fsigned-char)"
    Category="General"
    Switch="-fsigned-char"
    F1Keyword="VC.Project.SDCCCompilerTool.SignedChar"/>
  <!--
      - -use-non-free        Search / include non-free licensed libraries and header files
  -->
  <BoolProperty
    Name="UseNonFree"
    DisplayName="Use Non-Free Files"
    Description="Search / include non-free licensed libraries and header files.     (--use-non-free)"
    Category="General"
    Switch="-use-non-free"
    F1Keyword="VC.Project.SDCCCompilerTool.UseNonFree"/>


  <!--
  **************************************
  * Code Generation Rules
  **************************************

Code generation options:
  -m                        Set the port to use e.g. -mz80.
  -->
  <EnumProperty 
    Name="PortType" 
    DisplayName="Port Type" 
    Description="The processor type to build for.    (-m)" 
    Category="CCodeGen" 
    F1Keyword="VC.Project.SDCCCompilerTool.PortType">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </EnumProperty.DataSource>
    <EnumValue 
      Switch="mmcs51" 
      Name="mcs51" 
      DisplayName="Intel MCS51" 
      Description="Generate code for the Intel MCS51 family of processors."/>
    <EnumValue 
      Switch="mds390"
      Name="ds390" 
      DisplayName="Dallas DS80C390" 
      Description="Generate code for the Dallas DS80C390 processor."/>
    <EnumValue 
      Switch="mds400" 
      Name="ds400" 
      DisplayName="Dallas DS80C400" 
      Description="Generate code for the Dallas DS80C400 processor."/>
    <EnumValue 
      Switch="mhc08" 
      Name="hc08" 
      DisplayName="Freescale/Motorola HC08" 
      Description="Generate code for the Freescale/Motorola HC08 (aka 68HC08) family of processors."/>
    <EnumValue 
      Switch="ms08"
      Name="s08" 
      DisplayName="Freescale/Motorola S08" 
      Description="Generate code for the Freescale/Motorola S08 (aka 68HCS08, HCS08, CS08) family of processors."/>
    <EnumValue 
      Switch="mz80" 
      Name="z80" 
      DisplayName="Zilog Z80" 
      Description="Generate code for the Zilog Z80 family of processors."/>
    <EnumValue 
      Switch="mz180" 
      Name="z180" 
      DisplayName="Zilog Z180" 
      Description="Generate code for the Zilog Z180 family of processors."/>
    <EnumValue 
      Switch="mr2k" 
      Name="r2k" 
      DisplayName="Rabbit 2000 / Rabbit 3000" 
      Description="Generate code for the Rabbit 2000 / Rabbit 3000 family of processors"/>
    <EnumValue 
      Switch="mr3ka" 
      Name="r3ka" 
      DisplayName="Rabbit 3000A" 
      Description="Generate code for the Rabbit 3000A family of processors."/>
    <EnumValue 
      Switch="mgbz80" 
      Name="gbz80" 
      DisplayName="GameBoy Z80" 
      Description="Generate code for the LR35902 GameBoy Z80 processor"/>
    <EnumValue 
      Switch="mtlcs90" 
      Name="tlcs90" 
      DisplayName="Toshiba TLCS-90" 
      Description="Generate code for the Toshiba TLCS-90 processor"/>
    <EnumValue 
      Switch="mez80_z80"
      Name="ez80_z80" 
      DisplayName="Zilog eZ80 processor in Z80 mode" 
      Description="Generate code for the Zilog eZ80 processor in Z80 mode."/>
    <EnumValue 
      Switch="mstm8"
      Name="stm8"
      DisplayName="STMicroelectronics STM8" 
      Description="Generate code for the STMicroelectronics STM8 family of processors."/>
    <EnumValue 
      Switch="mpdk13"
      Name="pdk13" 
      DisplayName="Padauk 13 bit" 
      Description="Generate code for Padauk processors with 13 bit wide program memory."/>
    <EnumValue 
      Switch="mpdk14" 
      Name="pdk14" 
      DisplayName="Padauk 14 bit" 
      Description="Generate code for Padauk processors with 14 bit wide program memory."/>
    <EnumValue 
      Switch="mpdk15" 
      Name="pdk15" 
      DisplayName="Padauk 15 bit"
      Description="Generate code for Padauk processors with 15 bit wide program memory."/>
    <EnumValue 
      Switch="mpic14" 
      Name="pic14" 
      DisplayName="Microchip PIC 14-bit" 
      Description="Generate code for the Microchip PIC 14-bit processors (p16f84 and variants. In development, not complete)."/>
    <EnumValue 
      Switch="mpic16" 
      Name="pic16" 
      DisplayName="Microchip PIC 16-bit" 
      Description="Generate code for the Microchip PIC 16-bit processors (p18f452 and variants. In development, not complete)."/>
    <EnumValue
      Switch="mTININative"
      Name="TININative"
      DisplayName="TININative"
      Description="Generate code for the TININative."/>
  </EnumProperty>
  <!--
  -p                        Select port specific processor e.g. -mpic14 -p16f84
  -->
  <StringProperty
    Name="ProcessorType"
    DisplayName="Processor Type"
    Description="Select port specific processor e.g. -mpic14 -p16f84.    (-p&lt;processorId&gt;)"
    Category="CCodeGen"
    Switch="p"
    F1Keyword="VC.Project.SDCCCompilerTool.ProcessorType">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -stack-auto          Stack automatic variables
  -->
  <BoolProperty
    Name="StackAuto"
    DisplayName="Stack Automatic Variables"
    Description="Stack automatic variables.     (--stack-auto)"
    Category="CCodeGen"
    Switch="-stack-auto"
    F1Keyword="VC.Project.SDCCCompilerTool.StackAuto"/>
  <!--
      - -xstack              Use external stack
  -->
  <BoolProperty
    Name="ExternalStack"
    DisplayName="Use External Stack"
    Description="Use external stack.     (--xstack)"
    Category="CCodeGen"
    Switch="-xstack"
    F1Keyword="VC.Project.SDCCCompilerTool.ExternalStack"/>
  <!--
      - -int-long-reent      Use reentrant calls on the int and long support functions
  -->
  <BoolProperty
    Name="IntLongReent"
    DisplayName="Int/Long Reenterant Functions"
    Description="Use reentrant calls on the int and long support functions.     (--int-long-reent)"
    Category="CCodeGen"
    Switch="-int-long-reent"
    F1Keyword="VC.Project.SDCCCompilerTool.IntLongReent"/>
  <!--
      - -float-reent         Use reentrant calls on the float support functions
  -->
  <BoolProperty
    Name="FloatReent"
    DisplayName="Float Reenterant Functions"
    Description="Use reentrant calls on the float support functions.     (--float-reent)"
    Category="CCodeGen"
    Switch="-float-reent"
    F1Keyword="VC.Project.SDCCCompilerTool.FloatReent"/>
  <!--
      - -xram-movc           Use movc instead of movx to read xram (xdata)
  -->
  <BoolProperty
    Name="XRamMovec"
    DisplayName="Use MOVC to read XRAM"
    Description="Use movc instead of movx to read xram (xdata).     (--xram-movc)"
    Category="CCodeGen"
    Switch="-xram-movc"
    F1Keyword="VC.Project.SDCCCompilerTool.XRamMovec"/>
  <!--
      - -callee-saves        &lt;func[,func,...]&gt; Cause the called function to save registers instead of the caller
  -->
  <StringListProperty
    Name="CalleeSaves"
    DisplayName="Callee Saves Registers"
    Description="Cause the called function to save registers instead of the caller.     (--callee-saves &lt;func[,func,...]&gt;)"
    Category="CCodeGen"
    Switch="-callee-saves"
    F1Keyword="VC.Project.SDCCCompilerTool.CalleeSaves"/>
  <!--
      - -profile             On supported ports, generate extra profiling information
  -->
  <BoolProperty
    Name="Profile"
    DisplayName="Profile"
    Description="On supported ports, generate extra profiling information.     (--profile)"
    Category="CCodeGen"
    Switch="-profile"
    F1Keyword="VC.Project.SDCCCompilerTool.Profile"/>
  <!--
      - -fomit-frame-pointer  Leave out the frame pointer.
  -->
  <BoolProperty
    Name="OmitFramePointer"
    DisplayName="Omit Frame Pointer"
    Description="Leave out the frame pointer.     (--fomit-frame-pointer)"
    Category="CCodeGen"
    Switch="-fomit-frame-pointer"
    F1Keyword="VC.Project.SDCCCompilerTool.OmitFramePointer"/>
  <!--
      - -all-callee-saves    callee will always save registers used
  -->
  <BoolProperty
    Name="AllCalleeSaves"
    DisplayName="All Callee Saves Register"
    Description="Callee will always save registers used.     (--all-callee-saves)"
    Category="CCodeGen"
    Switch="-all-callee-saves"
    F1Keyword="VC.Project.SDCCCompilerTool.AllCalleeSaves"/>
  <!--
      - -stack-probe         insert call to function __stack_probe at each function prologue
  -->
  <BoolProperty
    Name="StackProbe"
    DisplayName="Stack Probe"
    Description="Insert call to function __stack_probe at each function prologue.     (--stack-probe)"
    Category="CCodeGen"
    Switch="-stack-probe"
    F1Keyword="VC.Project.SDCCCompilerTool.StackProbe"/>
  <!--
      - -no-xinit-opt        don't memcpy initialized xram from code
  -->
  <BoolProperty
    Name="NoXinitOpt"
    DisplayName="No Xinit Options"
    Description="Don't memcpy initialized xram from code.     (--no-xinit-opt)"
    Category="CCodeGen"
    Switch="-no-xinit-opt"
    F1Keyword="VC.Project.SDCCCompilerTool.NoXinitOpt"/>
  <!--
      - -no-c-code-in-asm    don't include c-code as comments in the asm file
  -->
  <BoolProperty
    Name="NoCCodeInAsm"
    DisplayName="No C Code in Asm"
    Description="Don't include C-Code as comments in the asm file.     (--no-c-code-in-asm)"
    Category="CCodeGen"
    Switch="-no-c-code-in-asm"
    F1Keyword="VC.Project.SDCCCompilerTool.NoCCodeInAsm"/>
  <!--
      - -no-peep-comments    don't include peephole optimizer comments
  -->
  <BoolProperty
    Name="NoPeepComments"
    DisplayName="No Peephole Comments"
    Description="Don't include peephole optimizer comments.     (--no-peep-comments)"
    Category="CCodeGen"
    Switch="-no-peep-comments"
    F1Keyword="VC.Project.SDCCCompilerTool.NoPeepComments"/>
  <!--
      - -codeseg             <name> use this name for the code segment
  -->
  <StringProperty
    Name="CodeSeg"
    DisplayName="Code Segment Name"
    Description="Use this name for the code segment.     (--codeseg &lt;name&gt;)"
    Category="CCodeGen"
    Switch="-codeseg"
    F1Keyword="VC.Project.SDCCCompilerTool.CodeSeg"/>
  <!--
      - -constseg            <name> use this name for the const segment
  -->
  <StringProperty
    Name="ConstSeg"
    DisplayName="Const Segment Name"
    Description="Use this name for the const segment.     (--constseg &lt;name&gt;)"
    Category="CCodeGen"
    Switch="-constseg"
    F1Keyword="VC.Project.SDCCCompilerTool.ConstSeg"/>
  <!--
      - -dataseg             <name> use this name for the data segment
  -->
  <StringProperty
    Name="DataSeg"
    DisplayName="Data Segment Name"
    Description="Use this name for the data segment.     (--dataseg &lt;name&gt;)"
    Category="CCodeGen"
    Switch="-dataseg"
    F1Keyword="VC.Project.SDCCCompilerTool.DataSeg"/>



  <!--
  **************************************
  * Optimization Rules
  **************************************

Optimization options:
      - -nooverlay           Disable overlaying leaf function auto variables
  -->
  <BoolProperty
    Name="NoOverlay"
    DisplayName="Disable Overlaying"
    Description="Disable overlaying leaf function auto variables.     (--nooverlay)"
    Category="COptimization"
    Switch="-nooverlay"
    F1Keyword="VC.Project.SDCCCompilerTool.NoOverlay"/>
  <!--
      - -nogcse              Disable the GCSE optimization
  -->
  <BoolProperty
    Name="NoGcse"
    DisplayName="Disable GCSE"
    Description="Disable the GCSE optimisation.     (--nogcse)"
    Category="COptimization"
    Switch="-nogcse"
    F1Keyword="VC.Project.SDCCCompilerTool.NoGcse"/>
  <!--
      - -nolabelopt          Disable label optimization
  -->
  <BoolProperty
    Name="NoLabelOpt"
    DisplayName="Disable Label Optimization"
    Description="Disable label optimization.     (--nolabelopt)"
    Category="COptimization"
    Switch="-nolabelopt"
    F1Keyword="VC.Project.SDCCCompilerTool.NoLabelOpt"/>
  <!--
      - -noinvariant         Disable optimization of invariants
  -->
  <BoolProperty
    Name="NoInvariant"
    DisplayName="Disable Invariant Optimization"
    Description="Disable optimization of invariants.     (--noinvariant)"
    Category="COptimization"
    Switch="-noinvariant"
    F1Keyword="VC.Project.SDCCCompilerTool.NoInvariant"/>
  <!--
      - -noinduction         Disable loop variable induction
  -->
  <BoolProperty
    Name="NoInduction"
    DisplayName="Disable Loop Variable Induction"
    Description="Disable loop variable induction.     (--noinduction)"
    Category="COptimization"
    Switch="-noinduction"
    F1Keyword="VC.Project.SDCCCompilerTool.NoInduction"/>
  <!--
      - -noloopreverse       Disable the loop reverse optimization
  -->
  <BoolProperty
    Name="NoLoopReverse"
    DisplayName="Disable Loop Reverse Optimization"
    Description="Disable the loop reverse optimization.     (--noloopreverse)"
    Category="COptimization"
    Switch="-noloopreverse"
    F1Keyword="VC.Project.SDCCCompilerTool.NoLoopReverse"/>
  <!--
      - -no-peep             Disable the peephole assembly file optimization
  -->
  <BoolProperty
    Name="NoPeep"
    DisplayName="Disable Peephole File Optimization"
    Description="Disable the peephole assembly file optimization.     (--no-peep)"
    Category="COptimization"
    Switch="-no-peep"
    F1Keyword="VC.Project.SDCCCompilerTool.NoPeep"/>
  <!--
      - -no-reg-params       On some ports, disable passing some parameters in registers
  -->
  <BoolProperty
    Name="NoRegParams"
    DisplayName="Disable Passing Parameters in Registers"
    Description="On some ports, disable passing some parameters in registers.     (--no-reg-params)"
    Category="COptimization"
    Switch="-no-reg-params"
    F1Keyword="VC.Project.SDCCCompilerTool.NoRegParams"/>
  <!--
      - -peep-asm            Enable peephole optimization on inline assembly
  -->
  <BoolProperty
    Name="PeepAsm"
    DisplayName="Enable Peephole Optimization on Inline Assembly"
    Description="Enable peephole optimization on inline assembly.     (--peep-asm)"
    Category="COptimization"
    Switch="-peep-asm"
    F1Keyword="VC.Project.SDCCCompilerTool.PeepAsm"/>
  <!--
      - -peep-return         Enable peephole optimization for return instructions
  -->
  <BoolProperty
    Name="PeepReturn"
    DisplayName="Enable Peephole Optimization on Return Instructions"
    Description="Enable peephole optimization for return instructions.     (--peep-return)"
    Category="COptimization"
    Switch="-peep-return"
    F1Keyword="VC.Project.SDCCCompilerTool.PeepReturn"/>
  <!--
      - -no-peep-return      Disable peephole optimization for return instructions
  -->
  <BoolProperty
    Name="NoPeepReturn"
    DisplayName="Disable Peephole Optimization on Return Instructions"
    Description="Disable peephole optimization for return instructions.     (--no-peep-return)"
    Category="COptimization"
    Switch="-no-peep-return"
    F1Keyword="VC.Project.SDCCCompilerTool.NoPeepReturn"/>
  <!--
      - -peep-file           <file> use this extra peephole file
  -->
  <StringProperty
    Name="PeepFile"
    DisplayName="Disable Peephole Optimization on Return Instructions"
    Description="use this extra peephole file.     (--peep-file &lt;file&gt;)"
    Category="COptimization"
    Switch="-peep-file "
    F1Keyword="VC.Project.SDCCCompilerTool.PeepFile"/>
  <!--
      - -opt-code-speed      Optimize for code speed rather than size
      - -opt-code-size       Optimize for code size rather than speed
  -->
  <EnumProperty
    Name="OptimizeCode"
    DisplayName="Code Optimization"
    Description="Optimize Code for Size/Speed"
    Category="COptimization"
    F1Keyword="VC.Project.SDCCCompilerTool.OptimizeCode">
    <EnumValue
      Name="CodeSpeed"
      Switch="-opt-code-speed"
      DisplayName="Optimize Code for Speed"
      Description="Optimize for code speed rather than size.    (--opt-code-speed)."/>
    <EnumValue
      Name="CodeSize"
      Switch="-opt-code-size"
      DisplayName="Optimize Code for Size"
      Description="Optimize for code size rather than speed.    (--opt-code-size)."/>
  </EnumProperty>
  <!--
      - -max-allocs-per-node  Maximum number of register assignments considered at each node of the tree decomposition
  -->
  <IntProperty
    Name="MaxAllocsPerNode"
    DisplayName="Max Allocs Per Node"
    Description="Maximum number of register assignments considered at each node of the tree decomposition.    (--max-allocs-per-node)"
    Category="COptimization"
    Switch="-max-allocs-per-node"
    F1Keyword="VC.Project.SDCCCompilerTool.MaxAllocsPerNode"/>
  <!--
      - -nolospre            Disable lospre
  -->
  <BoolProperty
    Name="NoLospre"
    DisplayName="Disable lospre"
    Description="Disable lospre.     (--nolospre)"
    Category="COptimization"
    Switch="-nolospre"
    F1Keyword="VC.Project.SDCCCompilerTool.NoLospre"/>
  <!--
      - -allow-unsafe-read   Allow optimizations to read any memory location anytime
  -->
  <BoolProperty
    Name="AllowUnsafeRead"
    DisplayName="Allow Unsafe Reads"
    Description="Allow optimizations to read any memory location anytime.     (--allow-unsafe-read)"
    Category="COptimization"
    Switch="-allow-unsafe-read"
    F1Keyword="VC.Project.SDCCCompilerTool.AllowUnsafeReads"/>
  <!--
      - -nostdlibcall        Disable optimization of calls to standard library
  -->
  <BoolProperty
    Name="NoStdLibCalls"
    DisplayName="No STD Lib Calls"
    Description="Disable optimization of calls to standard library.     (--nostdlibcall)"
    Category="COptimization"
    Switch="-nostdlibcall"
    F1Keyword="VC.Project.SDCCCompilerTool.NoStdLibCalls"/>


  <!--
  **************************************
  * Debugging Rules
  **************************************
  
Internal debugging options:
      - -dump-ast            Dump front-end AST before generating i-code
  -->
  <BoolProperty
    Name="DumpAst"
    DisplayName="Dump AST"
    Description="Dump front-end AST before generating i-code.     (--dump-ast)"
    Category="CDebugging"
    Switch="-dump-ast"
    F1Keyword="VC.Project.SDCCCompilerTool.DumpAst"/>
  <!--
      - -dump-i-code         Dump the i-code structure at all stages
  -->
  <BoolProperty
    Name="DumpICode"
    DisplayName="Dump I-Code"
    Description="Dump the i-code structure at all stages.     (--dump-i-code)"
    Category="CDebugging"
    Switch="-dump-i-code"
    F1Keyword="VC.Project.SDCCCompilerTool.DumpICode"/>
  <!--
      - -dump-graphs         Dump graphs (control-flow, conflict, etc)
  -->
  <BoolProperty
    Name="DumpGraphs"
    DisplayName="Dump Graphs"
    Description="Dump graphs (control-flow, conflict, etc).     (--dump-graphs)"
    Category="CDebugging"
    Switch="-dump-graphs"
    F1Keyword="VC.Project.SDCCCompilerTool.DumpGraphs"/>
  <!--
      - -i-code-in-asm       Include i-code as comments in the asm file
  -->
  <BoolProperty
    Name="ICodeInAsm"
    DisplayName="Include I-Code in ASM"
    Description="Include i-code as comments in the asm file.     (--i-code-in-asm)"
    Category="CDebugging"
    Switch="-i-code-in-asm"
    F1Keyword="VC.Project.SDCCCompilerTool.ICodeInAsm"/>
  <!--
      - -fverbose-asm        Include code generator comments in the asm output
  -->
  <BoolProperty
    Name="VerboseAsm"
    DisplayName="Include Code Generator Comments in ASM"
    Description="Include code generator comments in the asm output.     (--fverbose-asm)"
    Category="CDebugging"
    Switch="-fverbose-asm"
    F1Keyword="VC.Project.SDCCCompilerTool.VerboseAsm"/>


  <!--
  **************************************
  * Linker Rules
  **************************************

Linker options:
  -l                        Include the given library in the link
  -->
  <StringListProperty
    Name="IncludeLibraries"
    DisplayName="Include Additional Library"
    Description="Include the given library in the link.    (-l&lt;library&gt;)"
    Category="Linker"
    Switch="l "
    F1Keyword="VC.Project.SDCCCompilerTool.IncludeLibraries">
    <StringListProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringListProperty.DataSource>
  </StringListProperty>
  <!--
  -L                        Add the next field to the library search path
      - -lib-path            <path> use this path to search for libraries
  -->
  <StringListProperty 
    Name="AdditionalLibraryPath" 
    DisplayName="Additional Library Path" 
    Description="Path to search for libraries.    (-L&lt;path&gt;)"
    Category="Linker" 
    Switch="L " 
    Subtype="folder"
    F1Keyword="VC.Project.SDCCCompilerTool.AdditionalLibraryPath">
    <StringListProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringListProperty.DataSource>
  </StringListProperty>
  <!--
      - -out-fmt-ihx         Output in Intel hex format
      - -out-fmt-s19         Output in S19 hex format
      - -out-fmt-elf         Output in ELF hex format
  -->
  <EnumProperty
    Name="OutputFormat"
    DisplayName="Output Format"
    Description="Output file format"
    Category="Linker"
    F1Keyword="VC.Project.SDCCCompilerTool.OutputFormat">
    <EnumProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </EnumProperty.DataSource>
    <EnumValue
      Name="Intel"
      Switch="-out-fmt-ihx"
      DisplayName="Intel Hex Format"
      Description="Output in Intel hex format.    (--out-fmt-ihx)."/>
    <EnumValue
      Name="S19"
      Switch="-opt-fmt-s19"
      DisplayName="S19 Hex Format"
      Description="Output in S19 hex format.    (--opt-fmt-s19)."/>
    <EnumValue
      Name="ELF"
      Switch="-opt-fmt-elf"
      DisplayName="ELF Hex Format"
      Description="Output in ELF hex format.    (--opt-fmt-elf)."/>
  </EnumProperty>
  <!--
      - -xram-loc            <nnnn> External Ram start location
  -->
  <StringProperty
    Name="XRamLocation"
    DisplayName="External Ram Location"
    Description="External Ram start location.    (--xram-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-xram-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.XRamLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -xram-size           <nnnn> External Ram size
  -->
  <StringProperty
    Name="XRamSize"
    DisplayName="External Ram Size"
    Description="External Ram size.    (--xram-size &lt;value&gt;)"
    Category="Linker"
    Switch="-xram-size"
    F1Keyword="VC.Project.SDCCCompilerTool.XRamSize">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -iram-size           <nnnn> Internal Ram size
  -->
  <StringProperty
    Name="IRamSize"
    DisplayName="Internal Ram Size"
    Description="Internal Ram size.    (--iram-size &lt;value&gt;)"
    Category="Linker"
    Switch="-iram-size"
    F1Keyword="VC.Project.SDCCCompilerTool.IRamSize">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -xstack-loc          <nnnn> External Stack start location
  -->
  <StringProperty
    Name="XStackLocation"
    DisplayName="External Stack Start Location"
    Description="External Stack start location.    (--xstack-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-xstack-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.XRamLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -code-loc            <nnnn> Code Segment Location
  -->
  <StringProperty
    Name="CodeLocation"
    DisplayName="Code Segment Location"
    Description="Code Segment Location.    (--code-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-code-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.CodeLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -code-size           <nnnn> Code Segment size
  -->
  <StringProperty
    Name="CodeSize"
    DisplayName="Code Segment Size"
    Description="Code Segment size.    (--code-size &lt;value&gt;)"
    Category="Linker"
    Switch="-code-size"
    F1Keyword="VC.Project.SDCCCompilerTool.CodeSize">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -stack-loc           <nnnn> Stack pointer initial value
  -->
  <StringProperty
    Name="StackLocation"
    DisplayName="Stack Pointer Initial Value"
    Description="Stack pointer initial value.    (--stack-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-stack-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.StackLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -data-loc            <nnnn> Direct data start location
  -->
  <StringProperty
    Name="DataLocation"
    DisplayName="Direct Data Start Location"
    Description="Direct data start location.    (--data-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-data-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.DataLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -idata-loc
  -->
  <StringProperty
    Name="IDataLocation"
    DisplayName="Indirect Data Start Location"
    Description="Indirect data start location.    (--idata-loc &lt;value&gt;)"
    Category="Linker"
    Switch="-idata-loc"
    F1Keyword="VC.Project.SDCCCompilerTool.IDataLocation">
    <StringProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="" Label="" HasConfigurationCondition="true" />
    </StringProperty.DataSource>
  </StringProperty>
  <!--
      - -no-optsdcc-in-asm   Do not emit .optsdcc in asm
  -->
  <BoolProperty
    Name="NoOptSdccInAsm"
    DisplayName="No .optsdcc in Asm"
    Description="Do not emit .optsdcc in asm.     (--no-optsdcc-in-asm)"
    Category="Linker"
    Switch="-no-optsdcc-in-asm"
    F1Keyword="VC.Project.SDCCCompilerTool.NoOptSdccInAsm"/>



</Rule>
